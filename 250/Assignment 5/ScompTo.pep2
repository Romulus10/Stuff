

;Sean Batzel
;CMPS 250 Spring 2016
;The following is a solution to Assignment 5
;Collaborated with Andrew Plaza, Sarah Potter, Zach Black, Kyle Hassett
;
;************************************************************************
; String subprogram that compares two strings (Sobjects) and
; returns a number less than zero if the first object is lexiographicall
; before (i.e. less than) the second, zero if they are equivalent, and a
; positive number otherwise.
;
;********  int ScompTo (char[] Sobject1, char[] Sobject2)
;
;-- Arguments -----------------------------------------------------------
Sobject1:  .EQUATE  2             ;formal parameter; address of Sobject
Sobject2:  .EQUATE  4             ;formal parameter; address of Sobject
;-- Local Data ----------------------------------------------------------
hold2:    .BLOCK    2
;-- Entry Point ---------------------------------------------------------
          .GLOBAL   ScompTo
ScompTo:   SAVEX
;<<<<<<<<< Instrumentation
           STRO     Sobject1,sf
           CHARO    '-',i
           STRO     Sobject2,sf
           CHARO    '\n',d
;>>>>>>>>>
           CLRA                   ;  A = 0;
           CLRX
;---------
loop:       NOP0
            LDBYTEA     Sobject2,sxf
            STA         hold2,d
            LDBYTEA     Sobject1,sxf
            CPA         hold2,d
            BRNE        done1
            CPA         0,i
            BREQ        equal
            INCX
            BR          loop
;---------
done1:      SUBA        hold2,d
            CPA         0,i
            BRGT        greater
            BRLT        less

greater:    NOP0
            LDA         1,i
            BR          done

less:       NOP0
            LDA         -1,i
            BR          done

equal:      NOP0
            LDA         0,i
            BR          done

done:       RESTOREX

;<<<<<<<<< Instrumentation
           CHARO    ',',i
           DECOA
           CHARO    '\n',i
;>>>>>>>>>
           RET0                   ;

;here's some code i was using to guide me
;int compareString(char *firstString, char *secondString){
;    if(firstString == NULL && secondString == NULL)
;        return 0;
;    int counter = 0;
;    while(firstString[counter] == secondString[counter]){
;        if(firstString[counter] == '\0' && secondString[counter] == '\0')
;            return 0;
;        counter++;
;    }
;    return firstString[counter] - secondString[counter];
;}
;
;
;
;
;
;
;
